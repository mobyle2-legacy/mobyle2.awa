{
    "type": "program", 
    "name": "chaos", 
    "version": "6.3.1", 
    "title": "chaos", 
    "description": "<text lang=\"en\">Draw a chaos game representation plot for a nucleotide sequence</text> </description>", 
    "authors": "Rice,P. Longden,I. and Bleasby, A.</authors>", 
    "references": [
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Larget, B. and D. Simon (1999). Markov chain Monte Carlo algorithms for the Bayesian analysis of phylogenetic trees. Molecular Biology and Evolution 16:750-759.</reference>"
        }, 
        {
            "value": "Simon, D. and B. Larget. 1998. Bayesian analysis in molecular biology and evolution (BAMBE), version 1.01 beta. Department of Mathematics and Computer Science, Duquesne University.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Gascuel O., 1997, BIONJ: an improved version of the NJ algorithm based on a simple model of sequence data, Molecular Biology and Evolution 14(7):685-695</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer,Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Criscuolo A, Gribaldo S (2010) BMGE (Block Mapping and Gathering with Entropy): selection of phylogenetic informative regions from multiple sequence alignments. BMC Evolutionary Biology 10:210. </reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Huang, X. and Madan, A. (1999) CAP3: A DNA Sequence Assembly Program. Genome Research, 9: 868-877.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }
    ], 
    "sourcelinks": [
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net/download", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net/download", 
        "https://projets.pasteur.fr/projects/list_files/blast2usa", 
        "ftp://ftp.pasteur.fr/pub/gensoft/projects/BMGE/", 
        "ftp://www.isrec.isb-sib.ch/pub/software/unix/boxshade/", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://seq.cs.iastate.edu/cap3.html", 
        "http://emboss.sourceforge.net/download"
    ], 
    "homepagelinks": [
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net", 
        "https://projets.pasteur.fr/projects/show/blast2usa", 
        "http://www.ch.embnet.org/software/BOX_form.html", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://seq.cs.iastate.edu/", 
        "http://emboss.sourceforge.net"
    ], 
    "doclinks": [
        "http://bioweb2.pasteur.fr/docs/EMBOSS/abiview.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/antigenic.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranambig.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranseq.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/banana.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/biosed.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://bioweb2.pasteur.fr/docs/BMGE/BMGE_doc.pdf", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/btwisted.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cai.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chaos.html", 
        "http://emboss.sourceforge.net/docs/themes"
    ], 
    "mobyle_cats": [
        "display", 
        "alignment:formatter", 
        "sequence:protein:motifs", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "phylogeny:bayesian", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "phylogeny:distance", 
        "sequence:edit", 
        "alignment:pairwise", 
        "database:search:filter", 
        "database:search:homology", 
        "database:search:display", 
        "database:search:filter", 
        "database:search:display", 
        "database:search:homology", 
        "alignment:multiple:information", 
        "alignment:multiple:display", 
        "sequence:nucleic:composition", 
        "sequence:nucleic:codon_usage", 
        "assembly:assembly", 
        "sequence:nucleic:composition"
    ], 
    "command": "chaos", 
    "inputs": {
        "parameters": {
            "e_input": {
                "name": "e_input", 
                "parameters": {
                    "e_sequence": {
                        "ismandatory": true, 
                        "prompt": "sequence option", 
                        "type": {
                            "biotype": "DNA", 
                            "datatype_class": "Sequence", 
                            "data_formats": [
                                "EMBL", 
                                "FASTA", 
                                "GCG", 
                                "GENBANK", 
                                "NBRF", 
                                "PIR", 
                                "RAW", 
                                "SWISSPROT", 
                                "GFF"
                            ], 
                            "card": "1,1"
                        }, 
                        "format": {
                            "python": "(\"\", \" -sequence=\" + str(value))[value is not None]"
                        }
                    }
                }
            }, 
            "e_output": {
                "name": "e_output", 
                "parameters": {
                    "e_graph": {
                        "ismandatory": true, 
                        "prompt": "Choose the e_graph output format", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "png"
                        ], 
                        "authorized_values": [
                            {
                                "value": "png", 
                                "label": "Png"
                            }, 
                            {
                                "value": "gif", 
                                "label": "Gif"
                            }, 
                            {
                                "value": "cps", 
                                "label": "Cps"
                            }, 
                            {
                                "value": "ps", 
                                "label": "Ps"
                            }, 
                            {
                                "value": "meta", 
                                "label": "Meta"
                            }, 
                            {
                                "value": "data", 
                                "label": "Data"
                            }
                        ], 
                        "format": {
                            "python": "(\" -graph=\" + str(vdef), \" -graph=\" + str(value))[value is not None and value!=vdef]"
                        }
                    }, 
                    "e_goutfile": {
                        "prompt": "Name of the output graph", 
                        "type": {
                            "datatype_class": "Filename"
                        }, 
                        "default_value": [
                            "chaos_graph"
                        ], 
                        "format": {
                            "python": "(\"\" , \" -goutfile=\" + str(value))[value is not None]"
                        }
                    }
                }
            }, 
            "auto": {
                "ishidden": true, 
                "prompt": "Turn off any prompting", 
                "type": {
                    "datatype_class": "String"
                }, 
                "format": {
                    "python": "\" -auto -stdout\""
                }
            }
        }
    }, 
    "outputs": {
        "parameters": {
            "e_output": {
                "name": "e_output", 
                "parameters": {
                    "outgraph_png": {
                        "isout": true, 
                        "prompt": "Graph file", 
                        "type": {
                            "datatype_class": "Picture", 
                            "datatype_superclass": "Binary"
                        }, 
                        "precond": {
                            "python": "e_graph == \"png\""
                        }, 
                        "filenames": {
                            "python": "\"*.png\""
                        }
                    }, 
                    "outgraph_gif": {
                        "isout": true, 
                        "prompt": "Graph file", 
                        "type": {
                            "datatype_class": "Picture", 
                            "datatype_superclass": "Binary"
                        }, 
                        "precond": {
                            "python": "e_graph == \"gif\""
                        }, 
                        "filenames": {
                            "python": "\"*.gif\""
                        }
                    }, 
                    "outgraph_ps": {
                        "isout": true, 
                        "prompt": "Graph file", 
                        "type": {
                            "datatype_class": "PostScript", 
                            "datatype_superclass": "Binary"
                        }, 
                        "precond": {
                            "python": "e_graph == \"ps\" or e_graph == \"cps\""
                        }, 
                        "filenames": {
                            "python": "\"*.ps\""
                        }
                    }, 
                    "outgraph_meta": {
                        "isout": true, 
                        "prompt": "Graph file", 
                        "type": {
                            "datatype_class": "Picture", 
                            "datatype_superclass": "Binary"
                        }, 
                        "precond": {
                            "python": "e_graph == \"meta\""
                        }, 
                        "filenames": {
                            "python": "\"*.meta\""
                        }
                    }, 
                    "outgraph_data": {
                        "isout": true, 
                        "prompt": "Graph file", 
                        "type": {
                            "datatype_class": "Text"
                        }, 
                        "precond": {
                            "python": "e_graph == \"data\""
                        }, 
                        "filenames": {
                            "python": "\"*.dat\""
                        }
                    }
                }
            }
        }
    }, 
    "comment": "<text lang=\"en\"> Extract the Identifier and Data Bank of the hits from the summary of a blast report ( in text format -m 0-6 ) The result is in USA list format. </text> </comment>"
}