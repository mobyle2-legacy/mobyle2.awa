{
    "type": "program", 
    "name": "code3", 
    "version": "6.3.1", 
    "title": "ND-Safir", 
    "description": "<text lang=\"en\">Denoise N-Dimensional images</text> </description>", 
    "authors": "Rice,P. Longden,I. and Bleasby, A.</authors>", 
    "references": [
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Larget, B. and D. Simon (1999). Markov chain Monte Carlo algorithms for the Bayesian analysis of phylogenetic trees. Molecular Biology and Evolution 16:750-759.</reference>"
        }, 
        {
            "value": "Simon, D. and B. Larget. 1998. Bayesian analysis in molecular biology and evolution (BAMBE), version 1.01 beta. Department of Mathematics and Computer Science, Duquesne University.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Gascuel O., 1997, BIONJ: an improved version of the NJ algorithm based on a simple model of sequence data, Molecular Biology and Evolution 14(7):685-695</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer,Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Criscuolo A, Gribaldo S (2010) BMGE (Block Mapping and Gathering with Entropy): selection of phylogenetic informative regions from multiple sequence alignments. BMC Evolutionary Biology 10:210. </reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Huang, X. and Madan, A. (1999) CAP3: A DNA Sequence Assembly Program. Genome Research, 9: 868-877.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }
    ], 
    "sourcelinks": [
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net/download", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net/download", 
        "https://projets.pasteur.fr/projects/list_files/blast2usa", 
        "ftp://ftp.pasteur.fr/pub/gensoft/projects/BMGE/", 
        "ftp://www.isrec.isb-sib.ch/pub/software/unix/boxshade/", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://seq.cs.iastate.edu/cap3.html", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download"
    ], 
    "homepagelinks": [
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net", 
        "https://projets.pasteur.fr/projects/show/blast2usa", 
        "http://www.ch.embnet.org/software/BOX_form.html", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://seq.cs.iastate.edu/", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net"
    ], 
    "doclinks": [
        "http://bioweb2.pasteur.fr/docs/EMBOSS/abiview.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/antigenic.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranambig.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranseq.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/banana.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/biosed.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://bioweb2.pasteur.fr/docs/BMGE/BMGE_doc.pdf", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/btwisted.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cai.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chaos.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/charge.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/checktrans.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chips.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/cif/cif.html", 
        "http://bioweb2.pasteur.fr/docs/cif/compatible_cohesive_ends.txt", 
        "http://bioweb2.pasteur.fr/docs/cif/paillasse_liste.txt", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cirdna.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/phylip/doc/clique.html", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/codcmp.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://serpico.rennes.inria.fr/doku.php?id=software:nd-safir:index", 
        "http://serpico.rennes.inria.fr/doku.php?id=software:nd-safir:index", 
        "http://serpico.rennes.inria.fr/doku.php?id=software:nd-safir:index"
    ], 
    "mobyle_cats": [
        "display", 
        "alignment:formatter", 
        "sequence:protein:motifs", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "phylogeny:bayesian", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "phylogeny:distance", 
        "sequence:edit", 
        "alignment:pairwise", 
        "database:search:filter", 
        "database:search:homology", 
        "database:search:display", 
        "database:search:filter", 
        "database:search:display", 
        "database:search:homology", 
        "alignment:multiple:information", 
        "alignment:multiple:display", 
        "sequence:nucleic:composition", 
        "sequence:nucleic:codon_usage", 
        "assembly:assembly", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "sequence:protein:composition", 
        "sequence:nucleic:codon_usage", 
        "sequence:enzyme:analysis", 
        "sequence:nucleic:restriction", 
        "display:nucleic:restriction", 
        "display", 
        "phylogeny:others", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "sequence:nucleic:codon_usage", 
        "Bio-Imaging", 
        "Bio-Imaging", 
        "Bio-Imaging"
    ], 
    "command": "cp ", 
    "inputs": {
        "parameters": {
            "copy": {
                "name": "copy", 
                "parameters": {
                    "copyright": {
                        "prompt": "none", 
                        "type": {
                            "datatype_class": "String"
                        }
                    }
                }
            }, 
            "input": {
                "name": "input", 
                "parameters": {
                    "inputImage": {
                        "ismandatory": true, 
                        "prompt": "Input Image file : ", 
                        "type": {
                            "datatype_class": "Binary"
                        }, 
                        "format": {
                            "python": "\" -i \" + str(value) + \" output.jpg\""
                        }
                    }
                }
            }, 
            "options": {
                "name": "options", 
                "parameters": {
                    "imageDimension": {
                        "ismandatory": true, 
                        "prompt": "Image Dimension : ", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "authorized_values": [
                            {
                                "value": "0", 
                                "label": "2D"
                            }, 
                            {
                                "value": "1", 
                                "label": "2D + Time"
                            }, 
                            {
                                "value": "2", 
                                "label": "3D"
                            }
                        ], 
                        "format": {
                            "python": "\"\""
                        }, 
                        "ctrl": {
                            "python": "= 2))"
                        }
                    }, 
                    "noiseType": {
                        "ismandatory": true, 
                        "prompt": "Noise type : ", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "authorized_values": [
                            {
                                "value": "0", 
                                "label": "Gaussian"
                            }, 
                            {
                                "value": "1", 
                                "label": "Poisson-Gaussian"
                            }
                        ], 
                        "format": {
                            "python": "\"\""
                        }, 
                        "ctrl": {
                            "python": "((value == 0) or (value == 1))"
                        }, 
                        "comment": "<text lang=\"en\">Gaussian noise is due to electronic perturbation and Poisson noise to low light exposition.</text> </comment>"
                    }, 
                    "patchSize": {
                        "ismandatory": true, 
                        "prompt": "Patch Size : ", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "1"
                        ], 
                        "authorized_values": [
                            {
                                "value": "0", 
                                "label": "1x1"
                            }, 
                            {
                                "value": "1", 
                                "label": "3x3"
                            }, 
                            {
                                "value": "2", 
                                "label": "5x5"
                            }, 
                            {
                                "value": "3", 
                                "label": "7x7"
                            }, 
                            {
                                "value": "4", 
                                "label": "9x9"
                            }, 
                            {
                                "value": "11", 
                                "label": "3x3x3 (3D image)"
                            }, 
                            {
                                "value": "12", 
                                "label": "5x5x5 (3D image)"
                            }, 
                            {
                                "value": "13", 
                                "label": "7x7x7 (3D image)"
                            }
                        ], 
                        "format": {
                            "python": "\"\""
                        }, 
                        "ctrl": {
                            "python": "=14) and (imageDimension == 2)))"
                        }, 
                        "comment": "<text lang=\"en\">Bigger patch size will result in longer processing time.</text> </comment>"
                    }, 
                    "outputType": {
                        "ismandatory": true, 
                        "prompt": "Output Image Pixel Type : ", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "16"
                        ], 
                        "authorized_values": [
                            {
                                "value": "8", 
                                "label": "8 (uchar)"
                            }, 
                            {
                                "value": "16", 
                                "label": "16 (ushort)"
                            }, 
                            {
                                "value": "32", 
                                "label": "32 (ulong)"
                            }
                        ], 
                        "format": {
                            "python": "\"\""
                        }, 
                        "ctrl": {
                            "python": "((value == 8) or (value == 16) or (value == 32))"
                        }
                    }, 
                    "iterationNumber": {
                        "ismandatory": true, 
                        "prompt": "Number of iteration : ", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "4"
                        ], 
                        "authorized_values": [
                            {
                                "value": "1", 
                                "label": "1"
                            }, 
                            {
                                "value": "2", 
                                "label": "2"
                            }, 
                            {
                                "value": "3", 
                                "label": "3"
                            }, 
                            {
                                "value": "4", 
                                "label": "4"
                            }, 
                            {
                                "value": "5", 
                                "label": "5"
                            }, 
                            {
                                "value": "6", 
                                "label": "6"
                            }, 
                            {
                                "value": "7", 
                                "label": "7"
                            }
                        ], 
                        "format": {
                            "python": "\"\""
                        }, 
                        "ctrl": {
                            "python": "= 7))"
                        }
                    }, 
                    "still": {
                        "ishidden": true, 
                        "prompt": "Still", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "format": {
                            "python": "\"\""
                        }
                    }
                }
            }
        }
    }, 
    "outputs": {
        "parameters": {
            "output": {
                "name": "output", 
                "parameters": {
                    "outputImage": {
                        "isout": true, 
                        "prompt": "Output Image (click save to download)", 
                        "type": {
                            "datatype_class": "Binary"
                        }, 
                        "filenames": {
                            "python": "\"output.jpg\""
                        }
                    }
                }
            }, 
            "previewparagraph": {
                "name": "previewparagraph", 
                "parameters": {
                    "preview": {
                        "isout": true, 
                        "prompt": "Preview (click on \"full screen view\" bellow for optimal preview display)", 
                        "type": {
                            "datatype_class": "Binary"
                        }, 
                        "filenames": {
                            "python": "\"output.jpg\""
                        }
                    }
                }
            }
        }
    }, 
    "comment": "<text lang=\"en\"> Use this interface to add new sequences to an existing alignment.</text> <text lang=\"en\">The profile is converted into a HMM and the un-aligned sequences will be multiply aligned (using the HMM background information) to form a profile; this constructed profile is aligned with the input profile; the columns in each profile (the original one and the one created from the un-aligned sequences) will be kept fixed and the alignment of the two profiles will be written out. The un/aligned sequences must contain at least two sequences.</text> </comment>"
}