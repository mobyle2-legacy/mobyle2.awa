{
    "type": "program", 
    "name": "cif", 
    "version": "0.2.2", 
    "title": "CIF", 
    "description": "<text lang=\"en\">Cut DNA regions in frame</text> </description>", 
    "authors": "E. Quevillon, B. Boeda</authors>", 
    "references": [
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Larget, B. and D. Simon (1999). Markov chain Monte Carlo algorithms for the Bayesian analysis of phylogenetic trees. Molecular Biology and Evolution 16:750-759.</reference>"
        }, 
        {
            "value": "Simon, D. and B. Larget. 1998. Bayesian analysis in molecular biology and evolution (BAMBE), version 1.01 beta. Department of Mathematics and Computer Science, Duquesne University.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Gascuel O., 1997, BIONJ: an improved version of the NJ algorithm based on a simple model of sequence data, Molecular Biology and Evolution 14(7):685-695</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer,Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Criscuolo A, Gribaldo S (2010) BMGE (Block Mapping and Gathering with Entropy): selection of phylogenetic informative regions from multiple sequence alignments. BMC Evolutionary Biology 10:210. </reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Huang, X. and Madan, A. (1999) CAP3: A DNA Sequence Assembly Program. Genome Research, 9: 868-877.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }
    ], 
    "sourcelinks": [
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net/download", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net/download", 
        "https://projets.pasteur.fr/projects/list_files/blast2usa", 
        "ftp://ftp.pasteur.fr/pub/gensoft/projects/BMGE/", 
        "ftp://www.isrec.isb-sib.ch/pub/software/unix/boxshade/", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://seq.cs.iastate.edu/cap3.html", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download"
    ], 
    "homepagelinks": [
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net", 
        "https://projets.pasteur.fr/projects/show/blast2usa", 
        "http://www.ch.embnet.org/software/BOX_form.html", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://seq.cs.iastate.edu/", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net"
    ], 
    "doclinks": [
        "http://bioweb2.pasteur.fr/docs/EMBOSS/abiview.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/antigenic.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranambig.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranseq.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/banana.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/biosed.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://bioweb2.pasteur.fr/docs/BMGE/BMGE_doc.pdf", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/btwisted.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cai.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chaos.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/charge.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/checktrans.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chips.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/cif/cif.html", 
        "http://bioweb2.pasteur.fr/docs/cif/compatible_cohesive_ends.txt", 
        "http://bioweb2.pasteur.fr/docs/cif/paillasse_liste.txt"
    ], 
    "mobyle_cats": [
        "display", 
        "alignment:formatter", 
        "sequence:protein:motifs", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "phylogeny:bayesian", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "phylogeny:distance", 
        "sequence:edit", 
        "alignment:pairwise", 
        "database:search:filter", 
        "database:search:homology", 
        "database:search:display", 
        "database:search:filter", 
        "database:search:display", 
        "database:search:homology", 
        "alignment:multiple:information", 
        "alignment:multiple:display", 
        "sequence:nucleic:composition", 
        "sequence:nucleic:codon_usage", 
        "assembly:assembly", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "sequence:protein:composition", 
        "sequence:nucleic:codon_usage", 
        "sequence:enzyme:analysis", 
        "sequence:nucleic:restriction", 
        "display:nucleic:restriction"
    ], 
    "command": "cif", 
    "inputs": {
        "parameters": {
            "input": {
                "name": "input", 
                "parameters": {
                    "sequence": {
                        "ismandatory": true, 
                        "prompt": "Sequence", 
                        "type": {
                            "biotype": "DNA", 
                            "datatype_class": "Sequence", 
                            "data_formats": [
                                "FASTA"
                            ], 
                            "card": "1,n"
                        }, 
                        "format": {
                            "perl": "\" -i $value \"", 
                            "python": "( \"\" , \" -i \" + str( value ) + \" \" )[value is not None]"
                        }
                    }
                }
            }, 
            "options": {
                "name": "options", 
                "parameters": {
                    "enztype": {
                        "prompt": "Type of enzymes (-T)", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "authorized_values": [
                            {
                                "value": "0", 
                                "label": "blunt + cohesive + klenow"
                            }, 
                            {
                                "value": "blunt", 
                                "label": "blunt"
                            }, 
                            {
                                "value": "cohesive", 
                                "label": "cohesive"
                            }, 
                            {
                                "value": "klenow", 
                                "label": "klenow"
                            }
                        ], 
                        "format": {
                            "perl": "($value) ?\"-T $value \": \"\"", 
                            "python": "( \"\" , \" -T \" + str( value ) )[value != vdef]"
                        }, 
                        "comment": "<text lang=\"en\">You can choose between:</text> <text lang=\"en\">- blunt : Use blunt cutters</text> <text lang=\"en\">- cohesive : Use cohesive cutters</text> <text lang=\"en\">- klenow : Use only 5' enzymes for Klenow fill-in.</text> <text lang=\"en\">[Default all three]</text> </comment>"
                    }, 
                    "strand": {
                        "prompt": "Cohesive enzyme strand (-S)", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "authorized_values": [
                            {
                                "value": "0", 
                                "label": "5' + 3'"
                            }, 
                            {
                                "value": "5", 
                                "label": "5'"
                            }, 
                            {
                                "value": "3", 
                                "label": "3'"
                            }
                        ], 
                        "format": {
                            "perl": "($value) ?\"-S $value \": \"\"", 
                            "python": "( \"\" , \" -S \" + str( value ) )[value != vdef]"
                        }, 
                        "comment": "<text lang=\"en\">Cohesive enzyme strand to use: </text> <text lang=\"en\"> - 5' </text> <text lang=\"en\"> - 3' </text> <text lang=\"en\"> - both : 5' and 3' (Default value).</text> <text lang=\"en\">(No effect if you choose to use blunt enzymes)</text> </comment>"
                    }, 
                    "digestionmod": {
                        "prompt": " Digestion mode (-D)", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "authorized_values": [
                            {
                                "value": "0", 
                                "label": "simple + double"
                            }, 
                            {
                                "value": "double", 
                                "label": "double"
                            }, 
                            {
                                "value": "simple", 
                                "label": "simple"
                            }
                        ], 
                        "format": {
                            "perl": "($value) ?\"-D $value \": \"\"", 
                            "python": "( \"\" , \" -D \" + str( value ) )[value != vdef]"
                        }, 
                        "comment": "<text lang=\"en\">Digestion mode:</text> <text lang=\"en\">- double: Report couple of enzymes that digest sequence</text> <text lang=\"en\">- simple: Report enzyme name that cut more than one time</text> <text lang=\"en\">- both: simple + double (Default value).</text> </comment>"
                    }, 
                    "Length": {
                        "prompt": "Minimum length of recognition site (-L)", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "6"
                        ], 
                        "format": {
                            "perl": "($value) ?\"-L $value \": \"\"", 
                            "python": "( \"\" , \" -L \" + str( value ) )[value is not None and value!=vdef]"
                        }, 
                        "comment": "<text lang=\"en\">Use enzymes with minimum length for DNA recognition site.</text> <text lang=\"en\">By default, 6.</text> </comment>"
                    }, 
                    "variant": {
                        "prompt": "Use enzymes with variant recognition site (-V)", 
                        "type": {
                            "datatype_class": "Boolean"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "format": {
                            "perl": "($value) ?\"-V\": \"\"", 
                            "python": "( \"\" , \" -V \" )[value]"
                        }, 
                        "comment": "<text lang=\"en\">Some cohesive enzymes have variant recognition site like 'GDGCH^C' for Bsp1286I, where:</text> <text lang=\"en\"> D = not C (A or G or T) </text> <text lang=\"en\"> H = not G (A or C or T)</text> <text lang=\"en\">This option, when set, use of these type of enzymes..</text> <text lang=\"en\">By default, this option is off.</text> </comment>"
                    }, 
                    "exotic": {
                        "prompt": "Report digestions in frame without ends compatibilities (-X)", 
                        "type": {
                            "datatype_class": "Boolean"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "precond": {
                            "perl": "$variant == 1", 
                            "python": "variant == 1"
                        }, 
                        "format": {
                            "perl": "($value) ?\"-X\": \"\"", 
                            "python": "( \"\" , \" -X \" )[value]"
                        }, 
                        "comment": "<text lang=\"en\">Some cohesive enzymes have variant recognition site like 'GDGCH^C' for Bsp1286I, where:</text> <text lang=\"en\"> D = not C (A or G or T) </text> <text lang=\"en\"> H = not G (A or C or T)</text> <text lang=\"en\">Thus, using thoses enzymes may produce a cut in frame but the produced ends may not be compatible together regarding DNA sequence.</text> <text lang=\"en\">Requires the '[-V | --variant]' option to work. By default, this option is off.</text> </comment>"
                    }, 
                    "compat": {
                        "prompt": "List of compatible cohesive ends (-C)", 
                        "type": {
                            "datatype_class": "Text"
                        }, 
                        "format": {
                            "perl": "($value) ?\"-C $value \": \"\"", 
                            "python": "( \"\" , \" -C \" + str( value ) )[value is not None]"
                        }, 
                        "comment": "<text lang=\"en\">File with list of compatible cohesive ends.</text> <text lang=\"en\">The default list used is given in the program help pages (compatible_cohesive_ends.txt).</text> <text lang=\"en\">If you want to give your own list, the format must be as follow:</text> <text lang=\"en\">\"Enzyme_name:compatEnz1_name,compatEnz2_name,...\"</text> </comment>"
                    }, 
                    "enzlist": {
                        "prompt": "Enzyme list to work with (-E)", 
                        "type": {
                            "datatype_class": "Text"
                        }, 
                        "format": {
                            "perl": "($value) ?\"-E $value \": \"\"", 
                            "python": "( \"\" , \" -E \" + str( value ) )[value is not None]"
                        }, 
                        "comment": "<text lang=\"en\">By default, the program works with a list of enzymes commonly used in laboratory given in the program help pages (paillasse_liste.txt).</text> <text lang=\"en\">If you want to give your own list, the format is one enzyme per line.</text> </comment>"
                    }
                }
            }, 
            "outputopt": {
                "name": "outputopt", 
                "parameters": {
                    "stop": {
                        "prompt": "Show stop codon (-P)", 
                        "type": {
                            "datatype_class": "Boolean"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "precond": {
                            "perl": "$enztype == 0 or $enztype eq 'blunt'", 
                            "python": "enztype == 0 or enztype == 'blunt'"
                        }, 
                        "format": {
                            "perl": "($value) ?\"-P\": \"\"", 
                            "python": "( \"\" , \" -P \" )[value]"
                        }, 
                        "comment": "<text lang=\"en\">Sometimes, blunt digestion, after linkage, can produce new codon around the cutting site that leads to stop codon.</text> <text lang=\"en\">This option displays such digestions with a tag 'stopCodon' in the output line results.</text> <text lang=\"en\">NOTE: This option only works if 'blunt' type is set. By default this option is off, thus if such case happened no results are reported for enzymes digestion.</text> </comment>"
                    }, 
                    "cut_pos": {
                        "prompt": "Show cut positions (-N)", 
                        "type": {
                            "datatype_class": "Boolean"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "format": {
                            "perl": "($value) ?\"-N\": \"\"", 
                            "python": "( \"\" , \" -N \" )[value]"
                        }, 
                        "comment": "<text lang=\"en\"> Enzymes may cut your sequence more than once.This option reports the number of time enzyme(s) cut your sequence. [Default off]</text> </comment>"
                    }, 
                    "mod_aa": {
                        "prompt": "Show new generated amino acid (-A)", 
                        "type": {
                            "datatype_class": "Boolean"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "precond": {
                            "perl": "$enztype ne 'cohesive'", 
                            "python": "enztype != 'cohesive'"
                        }, 
                        "format": {
                            "perl": "($value) ?\"-A\": \"\"", 
                            "python": "( \"\" , \" -A \" )[value]"
                        }, 
                        "comment": "<text lang=\"en\">Experimental option. [Default off]</text> <text lang=\"en\">This option allows, for 'blunt' or 'klenow' analysis to show, in such case, the Amino acid that have been changed due to the ligation between the 2 parts of the DNA after the digestion.</text> <text lang=\"en\">It will be shown as OldAA>NewAA (e.g.: G>N).</text> </comment>"
                    }, 
                    "outputstyle": {
                        "prompt": "Output style format (-F)", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "text"
                        ], 
                        "authorized_values": [
                            {
                                "value": "text", 
                                "label": "Text output"
                            }, 
                            {
                                "value": "gff", 
                                "label": "GFF3 output"
                            }, 
                            {
                                "value": "image", 
                                "label": "Image (png)"
                            }
                        ], 
                        "format": {
                            "perl": "($value) ?\"-F $value \": \"\"", 
                            "python": "( \"\" , \" -F \" + str( value ) )[value != vdef]"
                        }, 
                        "comment": "<text lang=\"en\">Choose the output type that you prefer.</text> <text lang=\"en\">- Text output (Default value)</text> <text lang=\"en\">- GFF3 output</text> <text lang=\"en\">- Image (png): Creates image (png).</text> </comment>"
                    }
                }
            }
        }
    }, 
    "outputs": {
        "parameters": {
            "img": {
                "isout": true, 
                "prompt": "Output image", 
                "type": {
                    "datatype_class": "Picture", 
                    "datatype_superclass": "Binary", 
                    "card": "1,n"
                }, 
                "precond": {
                    "perl": "$outputstyle eq 'image'", 
                    "python": "outputstyle == 'image'"
                }, 
                "filenames": {
                    "perl": "*.png", 
                    "python": "\"*.png\""
                }
            }
        }
    }, 
    "comment": "<text lang=\"en\">cif (for Cut In Frame) is a tool that works with DNA sequences. It is used to digest your sequences with a pool of restriction enzymes and to search which enzymes cut your sequence keeping your reading frame after ligation without any frame shift produced due to the digestion.</text> <text lang=\"en\">This helps users to work with a gene of interest to localize potential region(s) that could be removed from the final protein to check if regions have an impact or not on the final gene product. It can also allow to identify vital region(s) for the gene.</text> </comment>"
}