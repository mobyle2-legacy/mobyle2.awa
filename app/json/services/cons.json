{
    "type": "program", 
    "name": "cons", 
    "version": "6.3.1", 
    "title": "cons", 
    "description": "<text lang=\"en\">Create a consensus sequence from a multiple alignment</text> </description>", 
    "authors": "Rice,P. Longden,I. and Bleasby, A.</authors>", 
    "references": [
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Larget, B. and D. Simon (1999). Markov chain Monte Carlo algorithms for the Bayesian analysis of phylogenetic trees. Molecular Biology and Evolution 16:750-759.</reference>"
        }, 
        {
            "value": "Simon, D. and B. Larget. 1998. Bayesian analysis in molecular biology and evolution (BAMBE), version 1.01 beta. Department of Mathematics and Computer Science, Duquesne University.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Gascuel O., 1997, BIONJ: an improved version of the NJ algorithm based on a simple model of sequence data, Molecular Biology and Evolution 14(7):685-695</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer,Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaeffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), Gapped BLAST and PSI-BLAST: a new generation of protein database search programs, Nucleic Acids Res. 25:3389-3402.</reference>"
        }, 
        {
            "value": "Criscuolo A, Gribaldo S (2010) BMGE (Block Mapping and Gathering with Entropy): selection of phylogenetic informative regions from multiple sequence alignments. BMC Evolutionary Biology 10:210. </reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Huang, X. and Madan, A. (1999) CAP3: A DNA Sequence Assembly Program. Genome Research, 9: 868-877.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "Christian N. S. Pedersen, Rune B. Lyngso and Jotun Hein. Comparison of coding DNA in Proceedings of the 9th Annual Symposium of Combinatorial Pattern Matching (CPM), 1998.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }, 
        {
            "value": "G.Z. Hertz and G.D. Stormo. Identification of consensus patterns in unaligned DNA and protein sequences: a large-deviation statistical basis for penalizing gaps. In: Proceedings of the Third International Conference on Bioinformatics and Genome Research (H.A. Lim, and C.R. Cantor, editors). World Scientific Publishing Co., Ltd. Singapore, 1995. pages 201--216.</reference>"
        }, 
        {
            "value": "EMBOSS: The European Molecular Biology Open Software Suite (2000) Rice,P. Longden,I. and Bleasby, A. Trends in Genetics 16, (6) pp276--277</reference>"
        }
    ], 
    "sourcelinks": [
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net/download", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net/download", 
        "https://projets.pasteur.fr/projects/list_files/blast2usa", 
        "ftp://ftp.pasteur.fr/pub/gensoft/projects/BMGE/", 
        "ftp://www.isrec.isb-sib.ch/pub/software/unix/boxshade/", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://seq.cs.iastate.edu/cap3.html", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://emboss.sourceforge.net/download", 
        "http://sourceforge.net/projects/codonw/files/", 
        "http://www.daimi.au.dk/~ocaprani/ComAlign/programs/", 
        "http://www.daimi.au.dk/~cstorm/combat/", 
        "http://emboss.sourceforge.net/download", 
        "http://gzhertz.home.comcast.net/~gzhertz/CONSENSUS_2004-04-14.TAR.gz", 
        "http://emboss.sourceforge.net/download"
    ], 
    "homepagelinks": [
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://www.stat.wisc.edu/~larget/", 
        "http://emboss.sourceforge.net", 
        "http://www.lirmm.fr/~w3ifa/MAAS/BIONJ/", 
        "http://emboss.sourceforge.net", 
        "https://projets.pasteur.fr/projects/show/blast2usa", 
        "http://www.ch.embnet.org/software/BOX_form.html", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://seq.cs.iastate.edu/", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://emboss.sourceforge.net", 
        "http://codonw.sourceforge.net/", 
        "http://www.daimi.au.dk/~ocaprani/ComAlign/ComAlign.html", 
        "http://www.daimi.au.dk/~cstorm/combat/", 
        "http://emboss.sourceforge.net", 
        "http://gzhertz.home.comcast.net/~gzhertz/", 
        "http://emboss.sourceforge.net"
    ], 
    "doclinks": [
        "http://bioweb2.pasteur.fr/docs/EMBOSS/abiview.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/antigenic.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranambig.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/backtranseq.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/banana.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/biosed.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://www.ncbi.nlm.nih.gov/books/bv.fcgi?rid=handbook.chapter.ch16", 
        "http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/tut1.html", 
        "http://bioweb2.pasteur.fr/docs/BMGE/BMGE_doc.pdf", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/btwisted.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cai.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chaos.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/charge.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/checktrans.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/chips.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/cif/cif.html", 
        "http://bioweb2.pasteur.fr/docs/cif/compatible_cohesive_ends.txt", 
        "http://bioweb2.pasteur.fr/docs/cif/paillasse_liste.txt", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cirdna.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/phylip/doc/clique.html", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/codcmp.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://serpico.rennes.inria.fr/doku.php?id=software:nd-safir:index", 
        "http://serpico.rennes.inria.fr/doku.php?id=software:nd-safir:index", 
        "http://serpico.rennes.inria.fr/doku.php?id=software:nd-safir:index", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/coderet.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://codonw.sourceforge.net/Readme.html", 
        "http://codonw.sourceforge.net/Tutorial.html", 
        "http://www.daimi.au.dk/~ocaprani/ComAlign/HowTo.html", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/compseq.html", 
        "http://emboss.sourceforge.net/docs/themes", 
        "http://bioweb2.pasteur.fr/docs/phylip/doc/consense.html", 
        "http://bioweb2.pasteur.fr/docs/EMBOSS/cons.html", 
        "http://emboss.sourceforge.net/docs/themes"
    ], 
    "mobyle_cats": [
        "display", 
        "alignment:formatter", 
        "sequence:protein:motifs", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "sequence:nucleic:translation", 
        "sequence:protein:composition", 
        "phylogeny:bayesian", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "phylogeny:distance", 
        "sequence:edit", 
        "alignment:pairwise", 
        "database:search:filter", 
        "database:search:homology", 
        "database:search:display", 
        "database:search:filter", 
        "database:search:display", 
        "database:search:homology", 
        "alignment:multiple:information", 
        "alignment:multiple:display", 
        "sequence:nucleic:composition", 
        "sequence:nucleic:codon_usage", 
        "assembly:assembly", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "sequence:protein:composition", 
        "sequence:nucleic:codon_usage", 
        "sequence:enzyme:analysis", 
        "sequence:nucleic:restriction", 
        "display:nucleic:restriction", 
        "display", 
        "phylogeny:others", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "alignment:multiple", 
        "sequence:nucleic:codon_usage", 
        "Bio-Imaging", 
        "Bio-Imaging", 
        "Bio-Imaging", 
        "sequence:nucleic:edit", 
        "sequence:nucleic:codon_usage", 
        "alignment:multiple", 
        "alignment:pairwise", 
        "sequence:nucleic:composition", 
        "sequence:protein:composition", 
        "sequence:formatter", 
        "phylogeny:tree_analyser", 
        "sequence:protein:pattern", 
        "sequence:nucleic:pattern", 
        "alignment:consensus"
    ], 
    "command": "cons", 
    "inputs": {
        "parameters": {
            "e_input": {
                "name": "e_input", 
                "parameters": {
                    "e_sequence": {
                        "ismandatory": true, 
                        "prompt": "sequence option", 
                        "type": {
                            "datatype_class": "Alignment", 
                            "data_formats": [
                                "FASTA", 
                                "MSF", 
                                "PAIR", 
                                "MARKX0", 
                                "MARKX1", 
                                "MARKX2", 
                                "MARKX3", 
                                "MARKX10", 
                                "SRS", 
                                "SRSPAIR", 
                                "SCORE", 
                                "UNKNOWN", 
                                "MULTIPLE", 
                                "SIMPLE", 
                                "MATCH"
                            ], 
                            "card": "1,n"
                        }, 
                        "format": {
                            "python": "(\"\", \" -sequence=\" + str(value))[value is not None]"
                        }, 
                        "comment": "<text lang=\"en\">File containing a sequence alignment.</text> </comment>"
                    }, 
                    "e_datafile": {
                        "prompt": "Scoring matrix", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "mobyle_null"
                        ], 
                        "authorized_values": [
                            {
                                "value": "mobyle_null"
                            }, 
                            {
                                "value": "EBLOSUM30", 
                                "label": "Eblosum30"
                            }, 
                            {
                                "value": "EBLOSUM35", 
                                "label": "Eblosum35"
                            }, 
                            {
                                "value": "EBLOSUM40", 
                                "label": "Eblosum40"
                            }, 
                            {
                                "value": "EBLOSUM45", 
                                "label": "Eblosum45"
                            }, 
                            {
                                "value": "EBLOSUM50", 
                                "label": "Eblosum50"
                            }, 
                            {
                                "value": "EBLOSUM55", 
                                "label": "Eblosum55"
                            }, 
                            {
                                "value": "EBLOSUM60", 
                                "label": "Eblosum60"
                            }, 
                            {
                                "value": "EBLOSUM62", 
                                "label": "Eblosum62"
                            }, 
                            {
                                "value": "EBLOSUM62-12", 
                                "label": "Eblosum62-12"
                            }, 
                            {
                                "value": "EBLOSUM65", 
                                "label": "Eblosum65"
                            }, 
                            {
                                "value": "EBLOSUM70", 
                                "label": "Eblosum70"
                            }, 
                            {
                                "value": "EBLOSUM75", 
                                "label": "Eblosum75"
                            }, 
                            {
                                "value": "EBLOSUM80", 
                                "label": "Eblosum80"
                            }, 
                            {
                                "value": "EBLOSUM85", 
                                "label": "Eblosum85"
                            }, 
                            {
                                "value": "EBLOSUM90", 
                                "label": "Eblosum90"
                            }, 
                            {
                                "value": "EBLOSUMN", 
                                "label": "Eblosumn"
                            }, 
                            {
                                "value": "EDNAFULL", 
                                "label": "Ednafull"
                            }, 
                            {
                                "value": "EDNAMAT", 
                                "label": "Ednamat"
                            }, 
                            {
                                "value": "EDNASIMPLE", 
                                "label": "Ednasimple"
                            }, 
                            {
                                "value": "EPAM10", 
                                "label": "Epam10"
                            }, 
                            {
                                "value": "EPAM100", 
                                "label": "Epam100"
                            }, 
                            {
                                "value": "EPAM110", 
                                "label": "Epam110"
                            }, 
                            {
                                "value": "EPAM120", 
                                "label": "Epam120"
                            }, 
                            {
                                "value": "EPAM130", 
                                "label": "Epam130"
                            }, 
                            {
                                "value": "EPAM140", 
                                "label": "Epam140"
                            }, 
                            {
                                "value": "EPAM150", 
                                "label": "Epam150"
                            }, 
                            {
                                "value": "EPAM160", 
                                "label": "Epam160"
                            }, 
                            {
                                "value": "EPAM170", 
                                "label": "Epam170"
                            }, 
                            {
                                "value": "EPAM180", 
                                "label": "Epam180"
                            }, 
                            {
                                "value": "EPAM190", 
                                "label": "Epam190"
                            }, 
                            {
                                "value": "EPAM20", 
                                "label": "Epam20"
                            }, 
                            {
                                "value": "EPAM200", 
                                "label": "Epam200"
                            }, 
                            {
                                "value": "EPAM210", 
                                "label": "Epam210"
                            }, 
                            {
                                "value": "EPAM220", 
                                "label": "Epam220"
                            }, 
                            {
                                "value": "EPAM230", 
                                "label": "Epam230"
                            }, 
                            {
                                "value": "EPAM240", 
                                "label": "Epam240"
                            }, 
                            {
                                "value": "EPAM250", 
                                "label": "Epam250"
                            }, 
                            {
                                "value": "EPAM260", 
                                "label": "Epam260"
                            }, 
                            {
                                "value": "EPAM270", 
                                "label": "Epam270"
                            }, 
                            {
                                "value": "EPAM280", 
                                "label": "Epam280"
                            }, 
                            {
                                "value": "EPAM290", 
                                "label": "Epam290"
                            }, 
                            {
                                "value": "EPAM30", 
                                "label": "Epam30"
                            }, 
                            {
                                "value": "EPAM300", 
                                "label": "Epam300"
                            }, 
                            {
                                "value": "EPAM310", 
                                "label": "Epam310"
                            }, 
                            {
                                "value": "EPAM320", 
                                "label": "Epam320"
                            }, 
                            {
                                "value": "EPAM330", 
                                "label": "Epam330"
                            }, 
                            {
                                "value": "EPAM340", 
                                "label": "Epam340"
                            }, 
                            {
                                "value": "EPAM350", 
                                "label": "Epam350"
                            }, 
                            {
                                "value": "EPAM360", 
                                "label": "Epam360"
                            }, 
                            {
                                "value": "EPAM370", 
                                "label": "Epam370"
                            }, 
                            {
                                "value": "EPAM380", 
                                "label": "Epam380"
                            }, 
                            {
                                "value": "EPAM390", 
                                "label": "Epam390"
                            }, 
                            {
                                "value": "EPAM40", 
                                "label": "Epam40"
                            }, 
                            {
                                "value": "EPAM400", 
                                "label": "Epam400"
                            }, 
                            {
                                "value": "EPAM410", 
                                "label": "Epam410"
                            }, 
                            {
                                "value": "EPAM420", 
                                "label": "Epam420"
                            }, 
                            {
                                "value": "EPAM430", 
                                "label": "Epam430"
                            }, 
                            {
                                "value": "EPAM440", 
                                "label": "Epam440"
                            }, 
                            {
                                "value": "EPAM450", 
                                "label": "Epam450"
                            }, 
                            {
                                "value": "EPAM460", 
                                "label": "Epam460"
                            }, 
                            {
                                "value": "EPAM470", 
                                "label": "Epam470"
                            }, 
                            {
                                "value": "EPAM480", 
                                "label": "Epam480"
                            }, 
                            {
                                "value": "EPAM490", 
                                "label": "Epam490"
                            }, 
                            {
                                "value": "EPAM50", 
                                "label": "Epam50"
                            }, 
                            {
                                "value": "EPAM500", 
                                "label": "Epam500"
                            }, 
                            {
                                "value": "EPAM60", 
                                "label": "Epam60"
                            }, 
                            {
                                "value": "EPAM70", 
                                "label": "Epam70"
                            }, 
                            {
                                "value": "EPAM80", 
                                "label": "Epam80"
                            }, 
                            {
                                "value": "EPAM90", 
                                "label": "Epam90"
                            }, 
                            {
                                "value": "SSSUB", 
                                "label": "Sssub"
                            }
                        ], 
                        "format": {
                            "python": "(\"\", \" -datafile=\" + str(value))[value is not None and value!=vdef]"
                        }, 
                        "comment": "<text lang=\"en\">This is the scoring matrix file used when comparing sequences. By default it is the file 'EBLOSUM62' (for proteins) or the file 'EDNAFULL' (for nucleic sequences). These files are found in the 'data' directory of the EMBOSS installation.</text> </comment>"
                    }
                }
            }, 
            "e_additional": {
                "name": "e_additional", 
                "parameters": {
                    "e_plurality": {
                        "prompt": "Plurality check value", 
                        "type": {
                            "datatype_class": "Float"
                        }, 
                        "format": {
                            "python": "(\"\", \" -plurality=\" + str(value))[value is not None]"
                        }, 
                        "comment": "<text lang=\"en\">Set a cut-off for the number of positive matches below which there is no consensus. The default plurality is taken as half the total weight of all the sequences in the alignment.</text> </comment>"
                    }, 
                    "e_identity": {
                        "prompt": "Required number of identities at a position (value greater than or equal to 0)", 
                        "type": {
                            "datatype_class": "Integer"
                        }, 
                        "default_value": [
                            "0"
                        ], 
                        "format": {
                            "python": "(\"\", \" -identity=\" + str(value))[value is not None and value!=vdef]"
                        }, 
                        "ctrl": {
                            "python": "= 0"
                        }, 
                        "comment": "<text lang=\"en\">Provides the facility of setting the required number of identities at a site for it to give a consensus at that position. Therefore, if this is set to the number of sequences in the alignment only columns of identities contribute to the consensus.</text> </comment>"
                    }, 
                    "e_setcase": {
                        "prompt": "Define a threshold above which the consensus is given in uppercase", 
                        "type": {
                            "datatype_class": "Float"
                        }, 
                        "format": {
                            "python": "(\"\", \" -setcase=\" + str(value))[value is not None]"
                        }, 
                        "comment": "<text lang=\"en\">Sets the threshold for the positive matches above which the consensus is is upper-case and below which the consensus is in lower-case.</text> </comment>"
                    }
                }
            }, 
            "e_output": {
                "name": "e_output", 
                "parameters": {
                    "e_outseq": {
                        "prompt": "Name of the output sequence file (e_outseq)", 
                        "type": {
                            "datatype_class": "Filename"
                        }, 
                        "default_value": [
                            "cons.e_outseq"
                        ], 
                        "format": {
                            "python": "(\"\" , \" -outseq=\" + str(value))[value is not None]"
                        }
                    }, 
                    "e_osformat_outseq": {
                        "prompt": "Choose the sequence output format", 
                        "type": {
                            "datatype_class": "Choice"
                        }, 
                        "default_value": [
                            "FASTA"
                        ], 
                        "authorized_values": [
                            {
                                "value": "EMBL", 
                                "label": "Embl"
                            }, 
                            {
                                "value": "FASTA", 
                                "label": "Fasta"
                            }, 
                            {
                                "value": "GCG", 
                                "label": "Gcg"
                            }, 
                            {
                                "value": "GENBANK", 
                                "label": "Genbank"
                            }, 
                            {
                                "value": "NBRF", 
                                "label": "Nbrf"
                            }, 
                            {
                                "value": "PIR", 
                                "label": "Pir"
                            }, 
                            {
                                "value": "RAW", 
                                "label": "Raw"
                            }, 
                            {
                                "value": "SWISSPROT", 
                                "label": "Swissprot"
                            }, 
                            {
                                "value": "GFF", 
                                "label": "Gff"
                            }
                        ], 
                        "format": {
                            "python": "(\"\", \" -osformat=\" + str(value))[value is not None and value!=vdef]"
                        }
                    }, 
                    "e_name": {
                        "prompt": "Name of the consensus sequence", 
                        "type": {
                            "datatype_class": "String"
                        }, 
                        "format": {
                            "python": "(\"\", \" -name=\" + str(value))[value is not None]"
                        }
                    }
                }
            }, 
            "auto": {
                "ishidden": true, 
                "prompt": "Turn off any prompting", 
                "type": {
                    "datatype_class": "String"
                }, 
                "format": {
                    "python": "\" -auto -stdout\""
                }
            }
        }
    }, 
    "outputs": {
        "parameters": {
            "e_output": {
                "name": "e_output", 
                "parameters": {
                    "e_outseq_out": {
                        "isout": true, 
                        "prompt": "outseq_out option", 
                        "type": {
                            "datatype_class": "Sequence", 
                            "data_formats": [
                                "\n              ", 
                                "\n            "
                            ]
                        }, 
                        "filenames": {
                            "python": "e_outseq"
                        }
                    }
                }
            }
        }
    }, 
    "comment": "<text lang=\"en\">CONSENSE reads a file of computer-readable trees and prints out (and may also write out onto a file) a consensus tree.</text> </comment>"
}